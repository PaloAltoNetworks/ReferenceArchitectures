{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.13",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of VM-Series FW in the Azure portal"
      },
      "defaultValue": "vmseries-1"
    },
    "fwAvSet": {
      "type": "string",
      "metadata": {
        "description": "EXISTING Availability Set name for Firewalls"
      },
      "defaultValue": ""
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D3",
        "Standard_D4",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_A4",
        "Standard_DS3_v2",
        "Standard_DS4_v2"
      ],
      "metadata": {
        "description": "Azure VM size for VM-Series"
      },
      "defaultValue": "Standard_D3_v2"
    },
    "publicIPType": {
      "type": "string",
      "allowedValues": [
        "standard",
        "basic"
      ],
      "metadata": {
        "description": "Use Standard if this VM will be in the backend pool of a Standard SKU Load Balancer"
      },
      "defaultValue": "standard"
    },
    "imageVersion": {
      "type": "string",
      "allowedValues": [
        "10.2.6",
        "11.2.8",
        "latest"
      ],
      "metadata": {
        "description": "PAN OS Version"
      },
      "defaultValue": "11.2.8"
    },
    "imageSku": {
      "type": "string",
      "allowedValues": [
        "byol",
        "bundle1",
        "bundle2"
      ],
      "metadata": {
        "description": "Firewall License Model"
      },
      "defaultValue": "byol"
    },
    "bootstrapFirewall": {
      "type": "string",
      "allowedValues": [
        "no",
        "yes"
      ],
      "metadata": {
        "description": "Do you want to bootstrap the firewall?"
      },
      "defaultValue": "no"
    },
    "BootstrapStorageAccount": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Storage account hosting the bootstrap files"
      }
    },
    "StorageAccountAccessKey": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Authentication key to access the storage account"
      }
    },
    "StorageAccountFileShare": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "The file share in the storage account where the bootstrap files are located"
      }
    },
    "StorageAccountFileShareDirectory": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "The subdirectory hosting the bootstrap files. Only required if hosting multiple bootstrap directories on the same share"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the EXISTING Virtual Network (VNET)"
      },
      "defaultValue": "Transit"
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of resource group of EXISTING VNET"
      }
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "Management",
      "metadata": {
        "description": "EXISTING Subnet for Management"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "Public",
      "metadata": {
        "description": "Public EXISTING Subnet"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "Private",
      "metadata": {
        "description": "Private EXISTING Subnet"
      }
    },
    "subnet0StartAddress": {
      "type": "string",
      "defaultValue": "10.110.255.4",
      "metadata": {
        "description": "Management subnet static address"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "10.110.129.4",
      "metadata": {
        "description": "Public subnet static address"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "10.110.0.4",
      "metadata": {
        "description": "Private subnet static address"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the administrator account of VM-Series"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Password for the administrator account of VM-Series"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "metadata": {
        "description": "Name of FW1 MGMT Public Address"
      }
    },
    "nsgName": {
      "type": "string",
      "defaultValue": "None",
      "metadata": {
        "description": "Name of existing Network Security Group for MGMT FW interface"
      }
    },
    "customData": {
      "type": "string",
      "metadata": {
        "description": "Azure Custom Data - separate entries with a semicolon"
      }
    }
  },
  "variables": {
    "apiVersion": "2020-12-01",
    "imagePublisher": "paloaltonetworks",
    "imageOffer": "vmseries-flex",
    "nicName": "[concat(parameters('vmName'), '-eth')]",
    "vnetID": "[resourceId(parameters('virtualNetworkExistingRGName'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
    "customDataBase64": "[base64(parameters('customData'))]",
    "customDataField": "[concat('storage-account=', parameters('BootstrapStorageAccount'), ',access-key=', parameters('StorageAccountAccessKey'), ',file-share=', parameters('StorageAccountFileShare'),',share-directory=', parameters('StorageAccountFileShareDirectory'))]"
  },
  "resources": [
    {
      "apiVersion": "2020-11-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('publicIPType')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIPAddressName')]"
        }
      }
    },
    {
      "name": "[concat(variables('nicName'), '0')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2020-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-mgmt",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet0StartAddress')]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnet0Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('nicName'), '1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "dependsOn": [],
      "apiVersion": "2020-11-01",
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "ipconfig-untrust",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet1StartAddress')]",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('nicName'), '2')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2020-11-01",
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "ipconfig-trust",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet2StartAddress')]",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "condition": "[equals(parameters('bootstrapFirewall'),'yes')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'),'-bs')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]"
      ],
      "plan": {
        "name": "[parameters('imageSku')]",
        "product": "[variables('imageOffer')]",
        "publisher": "[variables('imagePublisher')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('fwAvSet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(variables('customDataField'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "[parameters('imageVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-bs-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'0'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'1'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'2'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "condition": "[equals(parameters('bootstrapFirewall'),'no')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]"
      ],
      "plan": {
        "name": "[parameters('imageSku')]",
        "product": "[variables('imageOffer')]",
        "publisher": "[variables('imagePublisher')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('fwAvSet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[variables('customDataBase64')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "[parameters('imageVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'0'))]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'1'))]",
              "properties": {
                "primary": false
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'2'))]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      }
    }
  ]
}


